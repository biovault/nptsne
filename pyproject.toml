# When PEP621 is fully implemented move setup.cfg data here
# see https://setuptools.pypa.io/en/latest/history.html for progress

[build-system]
requires = [
    "cmake>=3.15.0",
    "conan==1.46.0",
    "packaging",
    "gitpython",
    "setuptools>=42",
    "wheel"
]
# specify setuptools as packaging tool - setup.cfg contains config
build-backend = "setuptools.build_meta"

[tool.black]
line_length = 99

[tool.flake8]
max-line-length = 99

[tool.isort]
# make it compatible with black
profile = "black"

[tool.cibuildwheel]
build = "cp38-*"
test-command = "pip install scipy==1.7.3 && python {project}/test/run_doctest.py"
build-verbosity = 2
archs = "auto64"
skip = "cp2* pp*"


#PEP440TYPE is used to insert a qualifier in the version name
# It must be one of:
# "a" - alpha release
# "b" - beta release
# "rc" - release candidate + N or NN
# "" - final release (no build number)
# If PEP440TYPE = "a" or "b" the resulting name is "version" + [PEP440TYPE + "build_number"] 
#    -   where build number is calculated from commit count
# If PEP440TYPE = "" or "rcN" the resulting name is "version" + [PEP440TYPE]

[tool.cibuildwheel.windows]
environment = {PIP_USE_FEATURE="in-tree-build", CONAN_USER_HOME="$(cmd /c 'echo %cd%')", PEP440TYPE="a", FULL_VERSION="1.3.0.a1"}
skip = ["cp27-*"]
#build = ["cp36-win_amd64", "cp37-win_amd64", "cp38-win_amd64", "cp39-win_amd64"]
build = ["cp37-win_amd64", "cp38-win_amd64", "cp39-win_amd64", "cp310-win_amd64"]
before-all = [
    "{project}\\.ci\\cleanwheelhouse.bat"
]
before-build = [
#    "python -m pip uninstall pip setuptools",
#    "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py",
#    "python get-pip.py",
    "{project}\\.ci\\cleanprevbuild.bat",
    "pip3 install conan==1.46.0",
    "echo check conan",
    "where conan",
    "conan user",
    "type %CONAN_USER_HOME%\\cert.pem >> %CONAN_USER_HOME%\\.conan\\cacert.pem",
    "conan remote add -f lkeb-artifactory https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local",
    "conan remote list",
]

[tool.cibuildwheel.linux]
# These are passed into the docker
environment = {PIP_USE_FEATURE="in-tree-build", CONAN_USER_HOME="$(pwd)", PEP440TYPE="a", FULL_VERSION="1.3.0.a1"}
manylinux-x86_64-image = "manylinux2010"
skip = ["cp27-*"]
build = ["cp37-manylinux_x86_64", "cp38-manylinux_x86_64", "cp39-manylinux_x86_64", "cp310-manylinux_x86_64"]
#build = ["cp38-manylinux_x86_64"]

# The following runs in the Linux docker environment
before-build = [
    "chmod +x {project}/.ci/cleanprevbuild.sh",
    "{project}/.ci/cleanprevbuild.sh",
    "echo install and setup conan",
    "pip install conan==1.46.0",
    "which conan",
    "conan user",
    "cat $CONAN_USER_HOME/cert.pem >> $CONAN_USER_HOME/.conan/cacert.pem",
    "conan remote add -f lkeb-artifactory https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local",
    "conan remote list",
    "yum install -y lz4-devel libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel"
]
repair-wheel-command = [
    "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/cibwlibsdir",
    "echo 'Lib path for repair $LD_LIBRARY_PATH'",
    "auditwheel repair -w {dest_dir} {wheel}"
]
test-command = "export CI=TRUE && pip install scipy==1.7.3 && python {project}/test/run_doctest.py"


[tool.cibuildwheel.macos]
environment = {PIP_USE_FEATURE="in-tree-build", CONAN_USER_HOME="$(pwd)", PEP440TYPE="a", FULL_VERSION="1.3.0.a1"}
build-verbosity=1
skip = ["cp27-*"]
build = ["cp37-macosx_x86_64", "cp38-macosx_x86_64", "cp39-macosx_x86_64", "cp310-macosx_x86_64"]
#build = ["cp38-macosx_x86_64"]
before-all = [
    "HOMEBREW_NO_AUTO_UPDATE=1 brew install libomp && brew link --overwrite libomp",
    "if [ -d \"$CONAN_USER_HOME/wheelhouse\" ]; then rm -Rf $CONAN_USER_HOME/wheelhouse; fi",
    "mkdir $CONAN_USER_HOME/wheelhouse"
]
before-build = [
    "chmod +x {project}/.ci/cleanprevbuild.sh",
    "{project}/.ci/cleanprevbuild.sh",
    "echo check conan",
    "which python",
    "pip install conan==1.46.0",
    "which conan",
    "conan user",
    "cat $CONAN_USER_HOME/cert.pem >> $CONAN_USER_HOME/.conan/cacert.pem",
    "conan remote add -f lkeb-artifactory https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local",
    "conan remote list",
]
repair-wheel-command = [
    "export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$TMPDIR/cibwlibsdir",
    "echo 'Lib path for repair $DYLD_LIBRARY_PATH'",
    "delocate-listdeps {wheel} && delocate-wheel --require-archs x86_64 -w {dest_dir} {wheel}"
]
test-command = "export CI=TRUE && pip install scipy==1.7.3 && python {project}/test/run_doctest.py"
