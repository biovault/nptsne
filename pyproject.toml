[build-system]
requires = [
    "cmake>=3.15.0",
    "conan==1.41.0",
    "packaging",
    "gitpython",
    "setuptools>=42",
    "wheel"
]
wheelbuild-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build = "cp38-*"
test-command = "python {project}/test/run_doctest.py"
build-verbosity = 0
archs = "auto64"
skip = "cp2* pp*"

[tool.cibuildwheel.windows]
environment = {PIP_USE_FEATURE="in-tree-build", CONAN_USER_HOME="$(cmd /c 'echo %cd%')"}
skip = ["cp27-*"]
build = ["cp36-win_amd64", "cp37-win_amd64", "cp38-win_amd64", "cp39-win_amd64"]
before-all = [
    "{project}/.ci/cleanwheelhouse.bat"
]
before-build = [
    "{project}\\.ci\\cleanprevbuild.bat",
    "echo check conan",
    "where conan",
    "conan user",
    "type %CONAN_USER_HOME%\\cert.pem >> %CONAN_USER_HOME%\\.conan\\cacert.pem",
    "conan remote add -f lkeb-artifactory https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local",
    "conan remote list",
]


[tool.cibuildwheel.linux]
# The manylinux image needs to match the conan profile
# 2010 is gcc 8
environment = {PIP_USE_FEATURE="in-tree-build", CONAN_USER_HOME="$(pwd)"}
manylinux-x86_64-image = "manylinux2010"
skip = ["cp27-*"]
build = ["cp36-manylinux_x86_64", "cp37-manylinux_x86_64", "cp38-manylinux_x86_64", "cp39-manylinux_x86_64"]
before-build = [
    "echo $CONAN_USER_HOME",
    "chmod +x {project}/.ci/cleanprevbuild.sh",
    "{project}/.ci/cleanprevbuild.sh",
    "echo check conan",
    "which python",
    "pip install conan==1.41.0",
    "which conan",
    "conan user",
    "cat $CONAN_USER_HOME/cert.pem >> $CONAN_USER_HOME/.conan/cacert.pem",
    "conan remote add -f lkeb-artifactory https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local",
    "conan remote list",
    "yum install -y lz4-devel libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel"
]
repair-wheel-command = [
    "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/cibwlibsdir",
    "echo 'Lib path for repair $LD_LIBRARY_PATH'",
    "auditwheel repair -w {dest_dir} {wheel}"
]
test-command = "export CI=TRUE && python {project}/test/run_doctest.py"

[tool.cibuildwheel.macos]
environment = {PIP_USE_FEATURE="in-tree-build", CONAN_USER_HOME="$(pwd)"}
build-verbosity=1
skip = ["cp27-*"]
build = ["cp36-macosx_x86_64", "cp37-macosx_x86_64", "cp38-macosx_x86_64", "cp39-macosx_x86_64"]
before-all = [
    "HOMEBREW_NO_AUTO_UPDATE=1 brew install libomp && brew link --overwrite libomp",
    "if [ -d \"$CONAN_USER_HOME/wheelhouse\" ]; then rm -Rf $CONAN_USER_HOME/wheelhouse; fi",
    "mkdir $CONAN_USER_HOME/wheelhouse"
]
before-build = [
    "chmod +x {project}/.ci/cleanprevbuild.sh",
    "{project}/.ci/cleanprevbuild.sh",
    "echo check conan",
    "which python",
    "pip install conan==1.41.0",
    "which conan",
    "conan user",
    "cat $CONAN_USER_HOME/cert.pem >> $CONAN_USER_HOME/.conan/cacert.pem",
    "conan remote add -f lkeb-artifactory https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local",
    "conan remote list",
]
repair-wheel-command = [
    "export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$TMPDIR/cibwlibsdir",
    "echo 'Lib path for repair $DYLD_LIBRARY_PATH'",
    "delocate-listdeps {wheel} && delocate-wheel --require-archs x86_64 -w {dest_dir} {wheel}"
]
test-command = "export CI=TRUE && python {project}/test/run_doctest.py"
