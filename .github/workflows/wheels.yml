name: Build

on: [push, pull_request, workflow_dispatch]

env:
  cibuildwheel: "1.9.0"

jobs:
  # Job to buildwheels on all platforms
  build_wheels:
    name: Build wheels on ${{ matrix.job-name}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - job-name: "Linux"
            os: "ubuntu-20.04"

          # - job-name: "macOS"
          #   os: "macos-10.15"
          #   xcode-version: "10.3"

          # - job-name: "Windows"
          #   os: "windows-2019"

    steps:
      # see https://github.com/travis-ci/travis-ci/issues/6069#issuecomment-266546552
      # and https://stackoverflow.com/a/53409848/584201
      # A full checkout allows the git derived build number to work working (based on git log and rev-list)
      - name: Checkout the source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Used to host cibuildwheel
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Conan version
        run: echo "${{ steps.conan.outputs.version }}"

      - name: Install cibuildwheel
        uses: pypa/cibuildwheel@v2.2.2

      # cibuildwheel settings are mostly in the pyproject.toml file

      # Test the cibuildwheel action
      # cibuildwheel derives platform automatically on CI
      # Local run use --platform windows/linx/macos
      - name: Build wheels all platforms
        uses: pypa/cibuildwheel@v2.2.2

      # Temporary storage of job results
      # In later steps are collected and uploaded to (Test)PyPI
      # The default upload name is artifact but a name can be supplied
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          retention-days: 1
          if-no-files-found: error
  # TODO Add job to build sdist
  # Job to upload all artifacts after wheel & sdist build
  # Steps:
  #   1) Download artifacts from temp store
  #   2) Upload to either :
  #      a) - TestPyPI if no release tag
  #      b) - PyPI if release tag
  #   3) If the upload succeeds trigger either :
  #      a) - TestReadTheDocs if no release tag
  #      b) - ReadTheDocs if release tag

  upload_all_artifacts:
    name: Upload artifacts to pyPI or TestPyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Set BRANCH_NAME
        uses: nelonoel/branch-name@v1.0.1

      - name: Publish wheels to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN_SECRET  }}
      - name: readthedocs_pypi
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: echo T.B.D.

      - name: Publish wheels to TestPyPI
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN_SECRET  }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish ReadTheDocs from TestPyPi
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          export VERSION=`python setup.py --version`
          echo Check version $VERSION is on testpypi
          python -c "from tools.cmake_utils import search_for_version; search_for_version('$VERSION', 3, True)"
          curl -X POST -d "branches=${{ env.BRANCH_NAME }}" -d"token=${{ secrets.READTHEDOCS_TOKEN  }}" https://readthedocs.org/api/v2/webhook/bldrvnlw/130867/
