name: Build

on: [push, pull_request]

env:
  cibuildwheel: "1.9.0"


jobs:

  # Job to buildwheels on all platforms
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    compiler: []
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
        cxx:
          - clang++-10
          - g++-8

        exclude:
        - os: ubuntu-latest
          cxx: clang++-10
        - os: macos-latest
          cxx: g++-8

    steps:
      # see https://github.com/travis-ci/travis-ci/issues/6069#issuecomment-266546552
      # and https://stackoverflow.com/a/53409848/584201
      # A full checkout allows the git derived build number to work working (based on git log and rev-list)
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      # Used to host cibuildwheel
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install python dependencies
        run: python -m pip install cibuildwheel=="${{ env.cibuildwheel }}"

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
        env:
          CIBW_SKIP: "cp2* pp*"
          CIBW_BUILD: "cp36-manylinux_x86_64 cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp36-macosx_x86_64 cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64"
          CIBW_BUILD_VERBOSITY: 0
          CIBW_ENVIRONMENT_MACOS: "NPTSNE_BUILD_WITH_CONAN=TRUE CI=TRUE CMAKE_GENERATOR=Xcode "
          CIBW_ENVIRONMENT_LINUX: "NPTSNE_BUILD_WITH_CONAN=TRUE CI=TRUE"
          CIBW_BEFORE_ALL_LINUX: "bash {project}/.ci/prepare_build_linux.sh"
          CIBW_BEFORE_ALL_MACOS: "bash {project}/.ci/prepare_build_macos.sh"
          CIBW_BEFORE_BUILD_LINUX: "pip install --upgrade pip; pip install -r requirements.txt; source ./.ci/prepare_conan.sh; cat {project}/cert.pem >> ~/.conan/cacert.pem; git log -n 1 --pretty=format:%H ./src/nptsne/_version.txt"
          CIBW_BEFORE_BUILD_MACOS: "pip install --upgrade pip; pip install -r requirements.txt; source ./.ci/prepare_conan.sh; cat {project}/cert.pem >> ~/.conan/cacert.pem; source ./.ci/prepare_build_macos.sh"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: 'export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$TMPDIR/cibwlibsdir; echo "Lib path for repair $DYLD_LIBRARY_PATH"; delocate-listdeps {wheel} && delocate-wheel --require-archs x86_64 -w {dest_dir} {wheel}'
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/cibwlibsdir; echo "Lib path for repair $LD_LIBRARY_PATH"; auditwheel repair -w {dest_dir} {wheel}'
          CIBW_TEST_COMMAND: "python {project}/test/run_doctest.py"

      # Temporary storage of job results
      # In later steps are collected and uploaded to (Test)PyPI
      # The default upload name is artifact but a name can be supplied
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          retention-days: 1
          if-no-files-found: error



  # TODO Add job to build sdist

  # Job to upload all artifacts after wheel & sdist build
  # Steps:
  #   1) Download artifacts from temp store
  #   2) Upload to either :
  #      a) - TestPyPI if no release tag
  #      b) - PyPI if release tag
  upload_all_artifacts:
    name: Upload artifacts to pyPI or TestPyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish wheels to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD_SECRET  }}

      - name: Publish wheels to TestPyPI
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_PASSWORD_SECRET  }}
          repository_url: https://test.pypi.org/legacy/
