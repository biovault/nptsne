name: Build

on: [push, pull_request, workflow_dispatch]

env:
  # Set DOREADTHEDOCS to
  #   - "true" if this version is to be loaded to ReadTheDocs
  #   - "false" otherwise
  DOREADTHEDOCS: "true"
  # Set DORELEASE to
  #   - "true" if this version is to be loaded to PyPI
  #   - "false" if this version is to be loaded to TestPyPI
  DORELEASE: "false"

jobs:
  # Job to buildwheels on all platforms
  build_wheels:
    name: Build wheels on ${{ matrix.job-name}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - job-name: "Linux"
            os: "ubuntu-20.04"

          # - job-name: "macOS"
          #   os: "macos-10.15"
          #   xcode-version: "10.3"

          # - job-name: "Windows"
          #   os: "windows-2019"

    outputs:
      doreadthedocs: ${{ steps.rtd.outputs.doreadthedocs }}
      dorelease: ${{ steps.rtd.outputs.dorelease }}

    steps:
      # see https://github.com/travis-ci/travis-ci/issues/6069#issuecomment-266546552
      # and https://stackoverflow.com/a/53409848/584201
      # A full checkout allows the git derived build number to work working (based on git log and rev-list)
      - name: Checkout the source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Used to host cibuildwheel
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Conan version
        run: echo "${{ steps.conan.outputs.version }}"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.2.2

      # cibuildwheel settings are mostly in the pyproject.toml file
      # Test the cibuildwheel action
      # cibuildwheel derives platform automatically on CI
      # Local run use --platform windows/linx/macos
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - id: rtd
        run: |
          echo "::set-output name=doreadthedocs::$DOREADTHEDOCS"
          echo "::set-output name=dorelease::$DORELEASE"
      # Temporary storage of job results
      # In later steps are collected and uploaded to (Test)PyPI
      # The default upload name is artifact but a name can be supplied
      - uses: actions/upload-artifact@v2
        with:
          name: nptsne_wheels
          path: ./wheelhouse/*.whl
          retention-days: 1
          if-no-files-found: error

  # TODO Add job to build sdist
  # Job to upload all artifacts after wheel & sdist build
  # Steps:
  #   1) Download artifacts from temp store
  #   2) Upload to either :
  #      a) - TestPyPI if no release tag
  #      b) - PyPI if release tag

  upload_all_artifacts:
    name: Upload artifacts to pyPI or TestPyPI
    outputs:
      nptsneversion: ${{ steps.wheel_version.outputs.wheelver }}
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: nptsne_wheels
          path: ./dist

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install packaging>=21.0
          ls ./dist
          ls -a .

      - name: Get the version from the artifact names
        id: wheel_version
        shell: python
        run: |
          from pathlib import Path
          from packaging.utils import parse_wheel_filename
          p = Path("./dist")
          l = list(p.glob('*.whl'))
          tup = parse_wheel_filename(l[0].name)
          print(f'::set-output name=tag::v{str(tup[1])}')
          print(f'::set-output name=wheelver::{str(tup[1])}')

      - name: Tag using v + VERSION
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
          custom_tag: ${{ steps.wheel_version.outputs.wheelver }}
          tag_prefix: "v"

      - name: Publish wheels to PyPI
        if: ${{ needs.build_wheels.outputs.dorelease == 'true' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN_SECRET  }}
          packages_dir: ./dist/

      - name: Publish wheels to TestPyPI
        if: ${{ needs.build_wheels.outputs.dorelease == 'false' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN_SECRET  }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: ./dist/

  #   1) If the upload succeeds trigger either :
  #      ReadTheDocs if DOREADTHEDOCS was true
  do_read_the_docs:
    name: Add documentation to read the docs
    needs: [upload_all_artifacts]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.upload_all_artifacts.outputs.nptsneversion }}
    if: ${{ needs.build_wheels.outputs.doreadthedocs == 'true' }}

    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Verify wheel upload - to test.pypi.org
        if: ${{ needs.build_wheels.outputs.dorelease == 'false' }}
        run: |
          import os
          import requests
          r=requests.get(f'https://test.pypi.org/project/nptsne/{os.environ["VERSION"]}')
          exit(0) if r.status_code==200 else exit(1)
        shell: python

      - name: Activate new version and trigger ReadTheDocs
        run: |
          # Activate new version
          echo Patch in the new version
          curl \
            -X PATCH \
            -H "Authorization: Token ${{ secrets.READTHEDOCS_TOKEN  }}" https://readthedocs.org/api/v3/projects/nptsne/versions/$VERSION/ \
            -H "Content-Type: application/json" -d '{"active": true, "hidden": false}'
          # Trigger build
          echo Trigger the build
          curl \
            -X POST \
            -H \"Authorization: Token ${{ secrets.READTHEDOCS_TOKEN  }}" \
            -H "Content-Type: application/json" -d '{"active": true, "hidden": false}' https://readthedocs.org/api/v3/projects/nptsne/versions/$VERSION/builds/
