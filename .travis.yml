--- 

_cibw_linux:  &cibw_linux
  addons: {}
  install: 
    - python3 -m pip install cibuildwheel>=1.5.2
  language: python
  os: linux

  services: 
    - docker

after_success: 
  - cmake --build . --target upload_wheel --config Release

before_install: 
  - git submodule update --init --recursive
  - |
      if [ "${TRAVIS_OS_NAME:-}" == "osx" ]; then
        brew outdated python || brew upgrade python;
      fi
  - "if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then sudo apt-get install -y libglfw3 libglfw3-dev; fi"
  - |
      if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        HOMEBREW_NO_AUTO_UPDATE=1 brew install glfw
      fi
  - chmod +x .ci/install.sh
  - python3 --version
  
branches: 
  only: 
    - /feature\/.*/
    - release/1.0.0
    - master
    
env: 
  global: 
    - CIBW_TEST_COMMAND="python {project}/test/run_doctest.py"
    - CIBW_SKIP=pp*
    - CONAN_LOGIN_USERNAME="admin"
    - CONAN_PASSWORD=$CONAN_PASSWORD_SECRET
    - CONAN_UPLOAD="http://cytosplore.lumc.nl:8081/artifactory/api/conan/conan-local"
    - CONAN_STABLE_BRANCH_PATTERN="release/*"
    - CONAN_UPLOAD_ONLY_WHEN_STABLE=1

language: cpp

os:
- linux
#- osx

jobs: 
  include: 
  - stage: Building 
    name: Build Linux wheels
    python: "3.7"
    script: 
    - "set -e"
    - "cibuildwheel --output-dir wheelhouse"
    <<: *cibw_linux
    env:
      - CONAN_GCC_VERSIONS=8 
      - CONAN_DOCKER_IMAGE=conanio/gcc8
      - CONAN_BUILD_TYPES=Release
      - CONAN_ARCHS=x86_64 
      - CONAN_LINUX_PYTHON=3.7.1
      - CMAKE_GENERATOR="Unix Makefiles"
      - CONAN_OPTIONS="nptsne:python_version=3.7"
      - COMPILER=g++-8
      - CC=gcc-8
      - CXX=g++-8
      - LIBCXX=libstdc++ 
      - LIBSDIR=/tmp/cibwlibsdir
      - CIBW_SKIP="cp2* cp35-* pp*"
      - CIBW_BUILD=cp37-manylinux_x86_64
      - CIBW_BUILD_VERBOSITY=3
      - CIBW_ENVIRONMENT="BUILD_GLFW=TRUE NPTSNE_BUILD_WITH_CONAN=TRUE"
      - CIBW_BEFORE_BUILD="yum remove -y cmake; yum install -y lz4-devel libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel; ./.ci/install.sh; conan user; conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan; ln -s `which g++` /usr/bin/c++ && ln -s `which gcc` /usr/bin/cc; mkdir $LIBSDIR"
      - CIBW_REPAIR_WHEEL_COMMAND_LINUX='export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LIBSDIR; echo "Lib path for repair $LD_LIBRARY_PATH"; auditwheel repair -w {dest_dir} {wheel}'
         

python: 
  - 3.6
  - 3.7
  - 3.8


     # - stage: build
       # name: Build macOS wheels without OpenMP
       # <<: *osx
       # language: generic
       # osx_image: xcode9.4
       # python: "3.7"
       # script: python3 -m cibuildwheel --output-dir wheelhouse
       # env: 
         # - CONAN_BUILD_TYPES=Release
         # - CONAN_ARCHS=x86_64
         # - CONAN_IS_TRAVIS_OSX=1 
         # - OSX_PYTHON=3.7
         # - CMAKE_GENERATOR="Xcode"
         # - CONAN_OPTIONS="nptsne:python_version=3.7"
         # - CIBW_BEFORE_BUILD_MACOS="'export SDKROOT=$(xcodebuild -version -sdk macosx Path)'"
         # - CIBW_BUILD=cp37-macosx_x86_64
         # - HOMEBREW_NO_AUTO_UPDATE=1


     # - stage: build
       # name: Build macOS wheels with OpenMP
       # <<: *osx
       # language: generic
       # osx_image: xcode10.3
       # python: "3.7"
       # script: python3 -m cibuildwheel --output-dir wheelhouse
       # env: 
         # - CONAN_BUILD_TYPES=Release
         # - CONAN_ARCHS=x86_64
         # - CONAN_IS_TRAVIS_OSX=1 
         # - OSX_PYTHON=3.7
         # - CMAKE_GENERATOR="Xcode"
         # - CONAN_OPTIONS="nptsne:python_version=3.7"
         # - CIBW_BEFORE_BUILD_MACOS="'export SDKROOT=$(xcodebuild -version -sdk macosx Path)'"
         # - CIBW_BUILD=cp37-macosx_x86_64
         # - HOMEBREW_NO_AUTO_UPDATE=1
